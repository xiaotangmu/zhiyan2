
server:
  port: 8082
  servlet:
    context-path: /zhiyan2

logging:
 level:
  root: info
  com:
   tan: trace #配置日志输出到文件中:这里输出的日志文件是在项目的根目录下面，这种可以指定文件名
#  max-history: 5 #这是设置最大的日志存储时间
#  max-size: 100M #这是设置最大的文件保存的日志大小
 file:
#   name: mylog.log
   path: sp.log #用来指定自己创建的日志文件
 config: classpath:logback-spring.xml

spring:
  datasource:
    username: root
    password: 1275485428
    url: jdbc:mysql://106.53.249.31:3306/zhiyan2?allowMultiQueries=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false
    driver-class-name: com.mysql.cj.jdbc.Driver
#    schema:
#      - classpath:department.sql
#      - classpath:employee.sql
#    initialization-mode: always
#文件上传大小限制
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

    type: com.alibaba.druid.pool.DruidDataSource
#   数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  redis:
    host: 106.53.249.31
    port: 6379
    database: 1

mybatis:
#  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml
  type-aliases-package: com.tan.warehouse2.bean
  configuration:
    map-underscore-to-camel-case: true
#    call-setters-on-nulls: true
  executor-type: batch # 批量处理执行器

# 分页配置
pagehelper:
  helper-dialect: mysql #数据库方言
  reasonable: true      #分页合理化
  support-methods-arguments: true #是否支持接口参数来传递分页参数，默认false
  page-size-zero: true #当设置为true的时候，如果pagesize设置为0（或RowBounds的limit=0），就不执行分页，返回全部结果
  params: count=countSql

#websocket 的配置信息
netty-websocket:
  host: 0.0.0.0
  path: /myWebSocket
  port: 8083
  bossLoopGroupThreads: 1
  workerLoopGroupThreads: 8