<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tan.warehouse2.mapper.OutMapper">

    <!--List<Out> getOutByConditionForm(@Param("out") Out out, @Param("limit") String limit);-->
    <select id="getOutByConditionForm" resultType="Out">
        SELECT * FROM sms_out
        <where>
            <if test="out.warehouseId != null and out.warehouseId > 0">
                warehouse_Id = #{out.warehouseId}
            </if>
            <if test="out.clientId != null and out.clientId > 0">
                AND client_Id = #{clientId}
            </if>
            <if test="out.outDate != null and out.outDate != '' and (limit == null or limit == '')">
                AND out_date = #{out.outDate}
            </if>
            <if test="limit != null and limit == '本月份'">
                AND date_format(STR_TO_DATE( `out_date`,'%Y/%m/%d'), '%Y %m') = date_format(DATE_SUB(curdate(), INTERVAL 0 MONTH),'%Y %m')
            </if>
            <if test="limit != null and limit == '上一个月份'">
                AND date_format(STR_TO_DATE( `out_date`,'%Y/%m/%d'), '%Y %m') = date_format(DATE_SUB(curdate(), INTERVAL 1 MONTH),'%Y %m')
            </if>
            <if test="limit != null and limit == '上第二个月份'">
                AND date_format(STR_TO_DATE( `out_date`,'%Y/%m/%d'), '%Y %m') = date_format(DATE_SUB(curdate(), INTERVAL 2 MONTH),'%Y %m')
            </if>
            <if test="limit != null and limit == '上第三个月份'">
                AND date_format(STR_TO_DATE( `out_date`,'%Y/%m/%d'), '%Y %m') = date_format(DATE_SUB(curdate(), INTERVAL 3 MONTH),'%Y %m')
            </if>
            <if test="limit != null and limit == '上三个月份'">
                AND date_format(STR_TO_DATE( `out_date`,'%Y/%m/%d'), '%Y %m')
                in
                (
                date_format(DATE_SUB(curdate(), INTERVAL 1 MONTH),'%Y %m'),
                date_format(DATE_SUB(curdate(), INTERVAL 2 MONTH),'%Y %m'),
                date_format(DATE_SUB(curdate(), INTERVAL 2 MONTH),'%Y %m')
                )
            </if>
            <if test="limit != null and limit == '一个月内'">
                AND STR_TO_DATE( `out_date`,'%Y/%m/%d') > DATE_SUB(CURDATE(), INTERVAL 1 MONTH )
            </if>
            <if test="limit != null and limit == '三个月内'">
                AND STR_TO_DATE( `out_date`,'%Y/%m/%d') > DATE_SUB(CURDATE(), INTERVAL 3 MONTH )
            </if>
            <if test="limit != null and limit == '半年内'">
                AND STR_TO_DATE( `out_date`,'%Y/%m/%d') > DATE_SUB(CURDATE(), INTERVAL 6 MONTH )
            </if>
            <if test="limit != null and limit == '一年内'">
                AND STR_TO_DATE( `out_date`,'%Y/%m/%d') > DATE_SUB(CURDATE(), INTERVAL 1 YEAR )
            </if>
            <if test="limit != null and limit == '两年内'">
                AND STR_TO_DATE( `out_date`,'%Y/%m/%d') > DATE_SUB(CURDATE(), INTERVAL 2 YEAR )
            </if>
        </where>
        ORDER BY STR_TO_DATE( `out_date`,'%Y/%m/%d') DESC, id DESC
    </select>

    <!-- 删除送货单 -->
    <!--void deleteDeliveryByOutIds(@Param("outIds") List<Integer> outIds);-->
    <delete id="deleteDeliveryByOutIds" parameterType="java.util.List">
        DELETE FROM sms_delivery WHERE out_id IN
        <foreach collection="outIds" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!--void deleteRelationByIds(@Param("ids") List<Integer> ids);-->
    <delete id="deleteRelationByIds" parameterType="java.util.List">
        DELETE FROM sms_sku_out WHERE out_id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!--List<Integer> findNotificationsByUserStatus(Integer userId);-->
    <!--<select id="findNotificationsByUserStatus" parameterType="Integer" resultType="int">-->
    <!--SELECT noti_id  FROM wms_user_notification-->
    <!--WHERE user_id = #{userId} AND status = '1'-->
    <!--</select>-->

    <!--List<Integer> findOutIdByLimit(@Param("limit") String limit);-->
    <select id="findOutIdByLimit" parameterType="String" resultType="int">
        SELECT id from sms_out
        <where>
            <if test="limit != null and limit == '一个月前'">
                DATE_SUB(CURDATE(), INTERVAL 1 MONTH) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '三个月前'">
                AND DATE_SUB(CURDATE(), INTERVAL 3 MONTH) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '半年前'">
                AND DATE_SUB(CURDATE(), INTERVAL 6 MONTH) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '一年前'">
                AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR ) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '两年前'">
                AND DATE_SUB(CURDATE(), INTERVAL 2 YEAR ) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
        </where>
    </select>

    <!--void deleteByLimit(@Param("limit") String limit);-->
    <delete id="deleteByLimit" parameterType="String">
        DELETE FROM sms_out
        <where>
            <if test="limit != null and limit == '一个月前'">
                DATE_SUB(CURDATE(), INTERVAL 1 MONTH) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '三个月前'">
                AND DATE_SUB(CURDATE(), INTERVAL 3 MONTH) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '半年前'">
                AND DATE_SUB(CURDATE(), INTERVAL 6 MONTH) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '一年前'">
                AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR ) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
            <if test="limit != null and limit == '两年前'">
                AND DATE_SUB(CURDATE(), INTERVAL 2 YEAR ) > STR_TO_DATE( `out_date`,'%Y/%m/%d')
            </if>
        </where>
    </delete>


    <!--List<Out> getAll();-->
    <select id="getAll" resultType="Out">
        SELECT * FROM sms_out
        ORDER BY STR_TO_DATE( `out_date`,'%Y/%m/%d') DESC
    </select>

    <!--List<Out> getOutByCondition(@Param("out") Out out);-->
    <select id="getOutByCondition" parameterType="Out" resultType="Out">
        SELECT * FROM sms_out
        <where>
            <if test="warehouseId != null and warehouseId > 0">
                warehouse_Id = #{warehouseId}
            </if>
            <if test="clientId != null and clientId > 0">
                AND client_Id = #{clientId}
            </if>
            <if test="outDate != null and outDate != ''">
                AND out_date = #{outDate}
            </if>
        </where>
        ORDER BY STR_TO_DATE( `out_date`,'%Y/%m/%d') DESC
    </select>

    <select id="getOutByOutNum" parameterType="String" resultType="Out">
        SELECT * FROM sms_out
        WHERE out_num = #{outNum}
        ORDER BY STR_TO_DATE( `out_date`,'%Y/%m/%d') DESC
    </select>

    <!--List<Sku> getSkusById(@Param("id") Integer id);-->
    <select id="getSkusById" parameterType="Integer" resultType="Sku">
        SELECT s.id, s.name, s.spu_id, s.catalog3_id,s.brand_id, s.unit,s.brand_name,s.catalog_name,
         s.warehouse_id, s.warehouse_name, s.attr_value_str ,se.num, se.price, se.total_price  FROM sms_sku s, sms_sku_out se
        WHERE s.id = se.sku_id AND se.out_id = #{id}
    </select>


    <!--int insertRelation(@Param("id") Integer id, @Param("skus") List<Sku> skus);-->
    <insert id="insertRelation" >
        insert into sms_sku_out(out_id, sku_id, num, price, total_price)
        VALUES
        <foreach collection="skus" item="item" separator=",">
            (
            #{id},
            #{item.id},
            #{item.num},
            #{item.price},
            #{item.totalPrice}
            )
        </foreach>

    </insert>


</mapper>